cmake_minimum_required(VERSION 3.10)
project(maolan VERSION 0.0.1 DESCRIPTION "Maolan core library")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_SHARED_LINKER_FLAGS "-pthread")
include(GNUInstallDirs)

file(GLOB SRCS src/*.cpp src/audio/*.cpp src/midi/*.cpp src/plugin/*.cpp src/scheduler/poll.cpp )
file(GLOB HEADERS maolan/*.hpp)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan)
set(MY_HEADERS ${MY_HEADEARS} ${HEADERS})
file(GLOB HEADERS maolan/audio/*.hpp)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/audio)
set(MY_HEADERS ${MY_HEADEARS} ${HEADERS})
file(GLOB HEADERS maolan/midi/*.hpp)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/midi)
set(MY_HEADERS ${MY_HEADEARS} ${HEADERS})
file(GLOB HEADERS maolan/plugin/*.hpp)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/plugin)
set(MY_HEADERS ${MY_HEADEARS} ${HEADERS})
file(GLOB HEADERS maolan/scheduler/poll.hpp)
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/scheduler)
set(MY_HEADERS ${MY_HEADEARS} ${HEADERS})

enable_testing()
add_custom_target(build-tests)
add_compile_definitions(PREFIX="${CMAKE_INSTALL_PREFIX}")

find_package(PkgConfig REQUIRED)

pkg_check_modules(SNDFILE REQUIRED sndfile)
set(MY_INCLUDE_DIRS ${MY_INCLUDE_DIRS} ${SNDFILE_INCLUDE_DIRS})
set(MY_LIBRARY_DIRS ${MY_LIBRARY_DIRS} ${SNDFILE_LIBRARY_DIRS})
set(MY_LIBRARIES ${MY_LIBRARIES} ${SNDFILE_LIBRARIES})

pkg_check_modules(NLOHMANN REQUIRED nlohmann_json)
set(MY_INCLUDE_DIRS ${MY_INCLUDE_DIRS} ${NLOHMANN_INCLUDE_DIRS})
set(MY_LIBRARY_DIRS ${MY_LIBRARY_DIRS} ${NLOHMANN_LIBRARY_DIRS})
set(MY_LIBRARIES ${MY_LIBRARIES} ${NLOHMANN_LIBRARIES})

add_executable(test-playback EXCLUDE_FROM_ALL tests/playback.cpp)
target_link_directories(test-playback PUBLIC ${CMAKE_CURRENT_BINARY_DIR} ${MY_LIBRARY_DIRS})
target_link_libraries(test-playback maolan ${MY_LIBRARIES})
add_dependencies(build-tests test-playback)
add_test(NAME oss COMMAND ./test-playback ${CMAKE_CURRENT_SOURCE_DIR}/data/oss)
add_test(NAME alsa COMMAND ./test-playback ${CMAKE_CURRENT_SOURCE_DIR}/data/alsa)
add_test(NAME sndio COMMAND ./test-playback ${CMAKE_CURRENT_SOURCE_DIR}/data/sndio)


option(LV2 "LADSPA version 2 plugins" OFF)
if (LV2)
    add_compile_definitions(LV2_ENABLED)
    pkg_check_modules(LV2 REQUIRED lv2)
    set(MY_INCLUDE_DIRS ${MY_INCLUDE_DIRS} ${LV2_INCLUDE_DIRS})
    set(MY_LIBRARY_DIRS ${MY_LIBRARY_DIRS} ${LV2_LIBRARY_DIRS})
    set(MY_LIBRARIES ${MY_LIBRARIES} ${LV2_LIBRARIES})

    pkg_check_modules(LILV REQUIRED lilv-0)
    set(MY_INCLUDE_DIRS ${MY_INCLUDE_DIRS} ${LILV_INCLUDE_DIRS})
    set(MY_LIBRARY_DIRS ${MY_LIBRARY_DIRS} ${LILV_LIBRARY_DIRS})
    set(MY_LIBRARIES ${MY_LIBRARIES} ${LILV_LIBRARIES})

    set(LV2_DEPS "lv2 lilv-0")

    file(GLOB LV2_SRCS src/plugin/lv2/*.cpp)
    file(GLOB LV2_HEADERS maolan/plugin/lv2/*.h)
    set(MY_INCLUDE_DIRS ${MY_INCLUDE_DIRS} maolan/plugin/lv2)
    set(SRCS ${SRCS} ${LV2_SRCS})
    install(FILES ${LV2_HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/plugin/lv2)
    set(MY_HEADERS ${MY_HEADEARS} ${LV2_HEADERS})

    add_executable(test-lv2 EXCLUDE_FROM_ALL tests/lv2/cli.cpp)
    target_link_directories(test-lv2 PUBLIC ${CMAKE_CURRENT_BINARY_DIR} ${MY_LIBRARY_DIRS})
    target_link_libraries(test-lv2 maolan ${MY_LIBRARIES})
    add_dependencies(build-tests test-lv2)
    add_test(NAME lv2 COMMAND ./test-lv2)
endif()

if (BSD)
    file(GLOB KQUEUE_HEADERS maolan/scheduler/kqueue.hpp)
    file(GLOB KQUEUE_SRCS src/scheduler/kqueue.cpp)
    set(SRCS ${SRCS} ${KQUEUE_SRCS})
    install(FILES ${KQUEUE_HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/maolan/scheduler)
    set(MY_HEADERS ${MY_HEADEARS} ${KQUEUE_HEADERS})
endif()


configure_file(libmaolan.pc.in libmaolan.pc @ONLY)
if (PKG_CONFIG_INSTALL_PATH)
    install(FILES ${PROJECT_BINARY_DIR}/libmaolan.pc DESTINATION ${CMAKE_INSTALL_PREFIX}${PKG_CONFIG_INSTALL_PATH})
elseif (BSD)
    install(FILES ${PROJECT_BINARY_DIR}/libmaolan.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/libdata/pkgconfig)
else()
    install(FILES ${PROJECT_BINARY_DIR}/libmaolan.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
endif()

include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_INSTALL_PREFIX}/include ${MY_INCLUDE_DIRS})
link_directories(${CMAKE_INSTALL_PREFIX}/lib ${MY_LIBRARY_DIRS})
add_compile_options(-Wall -Werror)

add_library(maolan SHARED ${SRCS} ${MY_HEADERS})
add_dependencies(build-tests maolan)
target_link_libraries(maolan ${MY_LIBRARIES})
install(TARGETS maolan LIBRARY DESTINATION lib)
